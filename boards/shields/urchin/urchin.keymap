#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "urchin-behaviors.dtsi"
#include "urchin-combos.dtsi"

#define BASE 0
#define NAV 1
#define NUM 2
#define FUNC 3
#define SYS 4

#define ACT_NAV &lt NAV SPACE
#define ACT_NUM &lt NUM SPACE
#define ACT_FUNC &lt FUNC SPACE

#define GUI_A &hm_l LGUI A
#define ALT_R &hm_l LALT R
#define SFT_S &hm_shift_l LSHIFT S
#define CTL_T &hm_l LCTRL T
#define ALGR_X &hm_l RALT X
#define CTL_N &hm_r RCTRL N
#define SFT_E &hm_shift_r RSHIFT E
#define ALT_I &hm_r LALT I
#define GUI_O &hm_r RGUI O
#define ALGR_DT &dot_colon

#define NAV_LEFT &mt LC(LEFT) LEFT
#define NAV_DOWN &mt LC(DOWN) DOWN
#define NAV_UP &mt LC(UP) UP
#define NAV_RIGHT &mt LC(RIGHT) RIGHT
#define NAV_HOME &mt LC(HOME) HOME
#define NAV_END &mt LC(END) END

#define BT_1 &bt BT_SEL 1
#define BT_2 &bt BT_SEL 2
#define BT_3 &bt BT_SEL 3
#define BT_4 &bt BT_SEL 4
#define BT_5 &bt BT_SEL 5
#define BOOT &bootloader
#define RESET &sys_reset
#define SET_USB &out OUT_USB
#define SET_BT &out OUT_BLE
#define TOGGLE &out OUT_TOG

&lt {
  flavor = "balanced";
  tapping-term-ms = <150>;
};

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <NUM NAV>;
      then-layer = <SYS>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
    base_layer {
      /* ┌────┬────┬────┬────┬────┐┌────┬────┬────┬────┬────┐
       * │  q │  w │  f │  p │  b ││  j │  l │  u │  y │  ' │
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │  a │  r │  s │  t │  g ││  m │  n │  e │  i │  o │
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │  z │  x │  c │  d │  v ││  k │  h │  , │  . │  ? │
       * └────┴────┴────┼────┼────┤├────┼────┼────┴────┴────┘
       *                │  ␣ │ NUM││ NAV│FUNC│
       *                └────┴────┘└────┴────┘
       */
      bindings = <
        &kp Q &kp W  &kp F &kp P &kp B &kp J &kp L &kp U     &kp Y   &kp APOS
        GUI_A ALT_R  SFT_S CTL_T &kp G &kp M CTL_N SFT_E     ALT_I   GUI_O
        &kp Z ALGR_X &kp C &kp D &kp V &kp K &kp H &com_semi ALGR_DT &que_excl
                           &kp SPC ACT_NUM ACT_NAV ACT_FUNC
      >;
    };

    navigation_layer {
      /* ┌────┬────┬────┬────┬────┐┌────┬────┬────┬────┬────┐
       * │    │    │    │    │    ││    │    │    │    │    │
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │    │    │    │    │    ││    │  ← │  ↓ │  ↑ │  → │
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │    │    │    │    │    ││    │  ⇤ │  ⤓ │  ⤒ │  ⇥ │
       * └────┴────┴────┼────┼────┤├────┼────┼────┴────┴────┘
       *                │    │    ││    │    │
       *                └────┴────┘└────┴────┘
       */
      bindings = <
        &trans &trans &trans &trans &trans &trans &trans   &trans    &trans    &trans
        &trans &trans &trans &trans &trans &trans NAV_LEFT NAV_DOWN  NAV_UP    NAV_RIGHT
        &trans &trans &trans &trans &trans &trans NAV_HOME &kp PG_DN &kp PG_UP NAV_END
                             &trans &trans &trans &trans
      >;
    };

    number_layer {
      /* ┌────┬────┬────┬────┬────┐┌────┬────┬────┬────┬────┐
       * │    │  7 │  8 │  9 │    ││    │    │    │    │    │
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │  0 │  4 │  5 │  6 │    ││    │    │    │    │    │
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │    │  1 │  2 │  3 │    ││    │    │    │    │    │
       * └────┴────┴────┼────┼────┤├────┼────┼────┴────┴────┘
       *                │    │    ││    │    │
       *                └────┴────┘└────┴────┘
       */
      bindings = <
        &trans &kp N7 &kp N8 &kp N9 &trans &trans &trans &trans &trans &trans
        &kp N0 &kp N4 &kp N5 &kp N6 &trans &trans &trans &trans &trans &trans
        &trans &kp N1 &kp N2 &kp N3 &trans &trans &trans &trans &trans &trans
                             &trans &trans &trans &trans
      >;
    };

    function_layer {
      /* ┌────┬────┬────┬────┬────┐┌────┬────┬────┬────┬────┐
       * │ F12│ F7 │ F8 │ F9 │    ││    │ RW │MUTE│ PAU│ FF │
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │ F11│ F4 │ F5 │ F6 │    ││    │PREV│VOL↓│VOL↑│NEXT│
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │ F10│ F1 │ F2 │ F3 │    ││    │    │    │    │    │
       * └────┴────┴────┼────┼────┤├────┼────┼────┴────┴────┘
       *                │    │    ││    │    │
       *                └────┴────┘└────┴────┘
       */
      bindings = <
        &kp F12 &kp F7 &kp F8 &kp F9 &trans &trans &kp C_RW   &kp C_MUTE   &kp C_PP     &kp C_FF
        &kp F11 &kp F4 &kp F5 &kp F6 &trans &trans &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
        &kp F10 &kp F1 &kp F2 &kp F3 &trans &trans &trans     &trans       &trans       &trans
                              &trans &trans &trans &trans
      >;
    };

    system_layer {
      /* ┌────┬────┬────┬────┬────┐┌────┬────┬────┬────┬────┐
       * │    │    │    │    │    ││    │    │    │    │    │
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │ BT✕│ BT4│ BT5│    │BOOT││BOOT│    │ USB│ BT │ TOG│
       * ├────┼────┼────┼────┼────┤├────┼────┼────┼────┼────┤
       * │    │ BT1│ BT2│ BT3│RSET││RSET│    │    │    │    │
       * └────┴────┴────┼────┼────┤├────┼────┼────┴────┴────┘
       *                │    │    ││    │    │
       *                └────┴────┘└────┴────┘
       */
      bindings = <
        &trans     &trans &trans &trans &trans &trans &trans &trans  &trans &trans
        &bt BT_CLR BT_4   BT_5   &trans BOOT   BOOT   &trans SET_USB SET_BT TOGGLE
        &trans     BT_1   BT_2   BT_3   RESET  RESET  &trans &trans  &trans &trans
                                 &trans &trans &trans &trans
      >;
    };
  };
};


